{"version":3,"file":"static/js/main.bb3f29e8.js","mappings":"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","sources":["src/designSystem/layout/AppContainer.tsx","src/designSystem/ui/Label.tsx","src/designSystem/ui/Button.tsx","src/designSystem/layout/VSpacer.tsx","src/designSystem/utils/ParseSpriteSheetData.ts","src/designSystem/context/gameLoop/GameLoopContext.tsx","src/designSystem/ui/SpriteSheet.tsx","src/designSystem/context/gameLoop/GameLoopContextProvider.tsx","src/designSystem/assets/sprites/flames/index.ts","src/components/Clock.tsx","src/components/gameBoard/Grid.tsx","src/components/GameBoard.tsx","src/designSystem/utils/CreateGridData.ts","src/components/screens/GameScreen.tsx","src/components/screens/IntroScreen.tsx","src/components/screens/resultScreen/LastResults.tsx","src/components/screens/ResultScreen.tsx","src/Game.tsx","App.tsx","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import { SafeAreaView, StyleSheet } from 'react-native';\nimport { StatusBar } from 'expo-status-bar';\nimport { useFonts } from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport { useCallback } from 'react';\n\nSplashScreen.preventAutoHideAsync();\n\nexport const AppContainer = ({ children }) => {\n  const [fontsLoaded, fontError] = useFonts({\n    neuroLight: require('../assets/fonts/neuropol-x-light.otf'),\n    neuroLightItalic: require('../assets/fonts/neuropol-x-light-italic.otf'),\n    neuro: require('../assets/fonts/neuropol-x-regular.otf'),\n    neuroItalic: require('../assets/fonts/neuropol-x-regular-italic.otf'),\n    neuroBold: require('../assets/fonts/neuropol-x-bold.otf'),\n    neuroBoldItalic: require('../assets/fonts/neuropol-x-bold-italic.otf'),\n  });\n\n  const onLayoutRootView = useCallback(async () => {\n    if (fontsLoaded || fontError) {\n      await SplashScreen.hideAsync();\n    }\n  }, [fontsLoaded, fontError]);\n\n  if (!fontsLoaded && !fontError) {\n    return null;\n  }\n\n  return (\n    <SafeAreaView onLayout={onLayoutRootView} style={styles.container}>\n      {children}\n      <StatusBar style='dark' />\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#000',\n  },\n});\n","import { ColorValue, Text } from 'react-native';\n\ninterface LabelProps {\n  text: string | number;\n  color?: ColorValue;\n  size?: number;\n  fontFamily?: string;\n}\n\nexport const Label = ({ text, color, size, fontFamily }: LabelProps) => {\n  return (\n    <Text\n      selectable={false}\n      style={{ color: color, fontSize: size, fontFamily: fontFamily }}\n    >\n      {text}\n    </Text>\n  );\n};\n","import { ColorValue, Pressable, StyleSheet, View } from 'react-native';\nimport { Label } from './Label';\n\ninterface ButtonProps {\n  title: string;\n  onPress: () => void;\n  titleColor?: ColorValue;\n  fontFamily?: string;\n}\n\nexport const Button = ({\n  title,\n  onPress,\n  titleColor,\n  fontFamily,\n}: ButtonProps) => {\n  return (\n    <Pressable onPress={onPress}>\n      <View style={styles.container}>\n        <Label\n          fontFamily={fontFamily}\n          text={title}\n          color={titleColor ? titleColor : '#b2b'}\n        />\n      </View>\n    </Pressable>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    height: 30,\n    minWidth: 100,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#bbb',\n    borderRadius: 10,\n  },\n});\n","import { View } from 'react-native';\n\ninterface VSpacerProps {\n  height: number;\n};\n\nexport const VSpacer = ({ height }: VSpacerProps) => {\n  return <View style={{ height }} />;\n};\n","import { SaveFormat, manipulateAsync } from 'expo-image-manipulator';\nexport const parseData = async (image, imageData) => {\n  const newImage = await manipulateAsync(\n    image.localUri,\n    [\n      {\n        crop: {\n          originX: imageData.frame.x,\n          originY: imageData.frame.y,\n          width: imageData.frame.w,\n          height: imageData.frame.h,\n        },\n      },\n    ],\n    { base64: true, format: SaveFormat.PNG }\n  );\n  return newImage;\n};\n","import { createContext } from 'react';\nexport const MAX_FPS: number = 60;\nexport const GameLoopContext = createContext({\n  subscribe: (callback): number => 0,\n  cleanup: (id) => {},\n});\n","import { Image } from 'expo-image';\nimport { Asset } from 'expo-asset';\nimport { parseData } from '../utils/ParseSpriteSheetData';\nimport { useContext, useEffect, useState } from 'react';\nimport { GameLoopContext, MAX_FPS } from '../context/gameLoop/GameLoopContext';\n\nexport const SpriteSheet = ({ image, data, fps }) => {\n  const { frames } = data;\n  const [currentFrame, setCurrentFrame] = useState(0);\n  const [images, setImages] = useState([]);\n  const dimensions = {\n    width: frames[0].sourceSize.w,\n    height: frames[0].sourceSize.h,\n  };\n  const [animationID, setAnimationID] = useState(null);\n  const gameLoop = useContext(GameLoopContext);\n\n  const setFrame = (tick) => {\n    const newFrame = (tick - 1) / (MAX_FPS / fps);\n    if (!Number.isInteger(newFrame)) return;\n    setCurrentFrame(newFrame);\n  };\n\n  useEffect(() => {\n    (async () => {\n      const spriteSheetImage = Asset.fromModule(image);\n      await spriteSheetImage.downloadAsync();\n      let imgs = [];\n      for (var i = 0; i < frames.length - 1; i++) {\n        imgs.push(await parseData(spriteSheetImage, frames[i]));\n      }\n      setImages(imgs);\n    })();\n  }, []);\n\n  useEffect(() => {\n    if (!animationID) {\n      setAnimationID(gameLoop.subscribe(setFrame));\n    }\n    return () => gameLoop.cleanup(animationID);\n  }, []);\n\n  return (\n    <Image\n      style={{ width: dimensions.width, height: dimensions.height }}\n      source={images[currentFrame]}\n    />\n  );\n};\n","import { useEffect, useRef } from 'react';\nimport { GameLoopContext, MAX_FPS } from './GameLoopContext';\n\nexport const GameLoopContextProvider = ({ children }) => {\n  const previousTimeTick = useRef(0);\n  const currentFpsTick = useRef(0);\n  let callbacks = [];\n\n  const subscribe = (callback): number => {\n    const id = Date.now();\n    const obj = { id: id, callback: callback };\n    callbacks.push(obj);\n    return id;\n  };\n\n  const update = () => {\n    requestAnimationFrame(update);\n    let now = Math.round((MAX_FPS * Date.now()) / 1000);\n    if (now == previousTimeTick.current) return;\n    previousTimeTick.current = now;\n    currentFpsTick.current++;\n\n    for (var i = 0; i < callbacks.length; i++) {\n      callbacks[i].callback(currentFpsTick.current);\n    }\n\n    if (currentFpsTick.current == 60) {\n      currentFpsTick.current = 0;\n    }\n  };\n\n  const cleanup = (id) => {\n    callbacks.splice(\n      callbacks.findIndex((callback) => callback.id === id),\n      1\n    );\n  };\n\n  useEffect(() => {\n    const req = requestAnimationFrame(update);\n    return () => cancelAnimationFrame(req);\n  }, [update]);\n\n  return (\n    <GameLoopContext.Provider value={{ subscribe, cleanup }}>\n      {children}\n    </GameLoopContext.Provider>\n  );\n};\n","export const flamesSheet = require('../flames/flames.png')","import { StyleSheet, View } from 'react-native';\nimport { Label } from '../designSystem/ui/Label';\nimport {\n  forwardRef,\n  useContext,\n  useEffect,\n  useImperativeHandle,\n  useRef,\n  useState,\n} from 'react';\nimport {\n  GameLoopContext,\n  MAX_FPS,\n} from '../designSystem/context/gameLoop/GameLoopContext';\n\nconst CLOCK_TIME: number = 1000;\nconst FPS: number = 1;\n\nexport const Clock = forwardRef((_props, ref) => {\n  const [currentTime, setCurrentTime] = useState(0);\n  const startTime = useRef<number>(Date.now());\n  const [animationID, setAnimationID] = useState(null);\n  const gameLoop = useContext(GameLoopContext);\n  //  fpsTick = 1\n  const fpsTick = MAX_FPS / (MAX_FPS / FPS);\n\n  useImperativeHandle(ref, () => ({\n    currentTime,\n  }));\n\n  const setTime = (tick) => {\n    if (tick === fpsTick) {\n      setCurrentTime(Math.floor((Date.now() - startTime.current) / CLOCK_TIME));\n    }\n  };\n\n  useEffect(() => {\n    if (!animationID) {\n      setAnimationID(gameLoop.subscribe(setTime));\n    }\n    return () => gameLoop.cleanup(animationID);\n  }, []);\n\n  return (\n    <View style={styles.container}>\n      <Label fontFamily='neuro' color='#fff' size={26} text={currentTime} />\n    </View>\n  );\n});\n\nconst styles = StyleSheet.create({\n  container: {\n    width: '100%',\n    height: 100,\n    justifyContent: 'center',\n    alignSelf: 'center',\n    alignItems: 'center',\n  },\n});\n","import { StyleSheet, View } from 'react-native';\nimport { Label } from '../../designSystem/ui/Label';\nimport { GridElement } from '../../designSystem/utils/CreateGridData';\n\nexport interface GridDataProps {\n  gridData: GridElement[];\n}\n\nexport const Grid = ({ gridData }: GridDataProps) => {\n  return (\n    <View style={styles.container}>\n      {gridData.map((element: GridElement) => {\n        return (\n          <View\n            key={element.id}\n            style={{\n              position: 'absolute',\n              top: element.y,\n              left: element.x,\n              width: element.width,\n              height: element.height,\n              justifyContent: 'center',\n              alignItems: 'center',\n              borderColor: '#ffc',\n              borderWidth: 0.5,\n            }}\n          >\n            <Label text={element.id} color='#fff' fontFamily='neuroBold' />\n          </View>\n        );\n      })}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    width: '100%',\n    height: '100%',\n    position: 'absolute',\n  },\n});\n","import { useRef } from 'react';\nimport { Platform, StyleSheet, View, useWindowDimensions } from 'react-native';\nimport {\n  GridDimensions,\n  GridElement,\n  createGridData,\n} from '../designSystem/utils/CreateGridData';\nimport { Grid } from './gameBoard/Grid';\n\n//  Value that reflects the number of grid elements\nexport const GRID_SIZE: GridDimensions = { horizontal: 9, vertical: 16 };\n\nexport const GameBoard = () => {\n  const { width, height } = useWindowDimensions();\n  const yOffSet = Platform.OS === 'web' ? 0 : 78;\n  const gridData = useRef<Array<GridElement>>(\n    createGridData(width, height - yOffSet, GRID_SIZE)\n  );\n\n  return (\n    <View style={styles.container}>\n      <Grid gridData={gridData.current} />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    alignSelf: 'center',\n    width: '100%',\n    height: '100%',\n    position: 'absolute',\n  },\n});\n","export type GridElement = {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n  id: string;\n};\n\nexport type GridDimensions = {\n  horizontal: number;\n  vertical: number;\n};\n\nexport const createGridData = (\n  width: number,\n  height: number,\n  gridDimensions: GridDimensions\n): Array<GridElement> => {\n  const elementWidth = width / gridDimensions.horizontal;\n  const elementHeight = height / gridDimensions.vertical;\n  const grid = new Array<GridElement>();\n  let id = 0;\n  for (var i = 0; i < gridDimensions.horizontal; i++) {\n    for (var j = 0; j < gridDimensions.vertical; j++) {\n      const element: GridElement = {\n        x: i * elementWidth,\n        y: j * elementHeight,\n        width: elementWidth,\n        height: elementHeight,\n        id: id.toString(),\n      };\n      grid.push(element);\n      id++;\n    }\n  }\n  return grid;\n};\n","import { useRef } from 'react';\nimport { Button } from '../../designSystem/ui/Button';\nimport { VSpacer } from '../../designSystem/layout/VSpacer';\nimport { SpriteSheet } from '../../designSystem/ui/SpriteSheet';\nimport { GameLoopContextProvider } from '../../designSystem/context/gameLoop/GameLoopContextProvider';\nimport { flamesSheet } from '../../designSystem/assets/sprites/flames';\nimport flamesData from '../../designSystem/assets/sprites/flames/flames.json';\nimport { Clock } from '../Clock';\nimport { GameBoard } from '../GameBoard';\n\nexport const GameScreen = ({ win, lose }) => {\n  const clock = useRef(null);\n\n  return (\n    <GameLoopContextProvider>\n      <GameBoard />\n      <Button\n        title='Win'\n        fontFamily='neuroBold'\n        onPress={() => win(clock.current.currentTime)}\n      />\n      <VSpacer height={20} />\n      <Button\n        title='Lose'\n        fontFamily='neuroBold'\n        onPress={() => lose(clock.current.currentTime)}\n      />\n      <VSpacer height={10} />\n      <Clock ref={clock} />\n      <SpriteSheet fps={30} data={flamesData} image={flamesSheet} />\n    </GameLoopContextProvider>\n  );\n};\n","import { VSpacer } from '../../designSystem/layout/VSpacer';\nimport { Button } from '../../designSystem/ui/Button';\nimport { Label } from '../../designSystem/ui/Label';\n\nexport const IntroScreen = ({ start }) => {\n  return (\n    <>\n      <Label\n        color='#fb9'\n        fontFamily='neuroBold'\n        text='This is going to be a fun game!'\n      />\n      <Label\n        color='#fff'\n        fontFamily='neuroBold'\n        text='Press Start Button'\n        size={18}\n      />\n      <VSpacer height={50} />\n      <Button title='Start' fontFamily='neuroBold' onPress={start} />\n    </>\n  );\n};\n","import { StyleSheet, View } from 'react-native';\nimport { Label } from '../../../designSystem/ui/Label';\n\nexport const LastResults = ({ results }) => {\n  return (\n    <>\n      <Label color='#fb9' fontFamily='neuroBoldItalic' text='Previous games' />\n      <View style={styles.container}>\n        {results.map((resultObj) => {\n          return (\n            <Label\n              fontFamily='neuro'\n              color={resultObj.win ? 'green' : 'red'}\n              text={resultObj.score}\n              key={resultObj.score + Math.random()}\n            />\n          );\n        })}\n      </View>\n    </>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n  },\n});\n","import { Label } from '../../designSystem/ui/Label';\nimport { VSpacer } from '../../designSystem/layout/VSpacer';\nimport { LastResults } from './resultScreen/LastResults';\nimport { Modal, StyleSheet, useWindowDimensions, View } from 'react-native';\nimport { useState } from 'react';\nimport { Button } from '../../designSystem/ui/Button';\n\nexport type ResultObj = {\n  score: number;\n  win: Boolean;\n};\n\ninterface ResultScreenProps {\n  result: ResultObj;\n  scores: [ResultObj];\n}\n\nexport const ResultScreen = ({ result, scores }: ResultScreenProps) => {\n  const { height } = useWindowDimensions();\n  const { win } = result;\n  const [modalVisible, setModalVisible] = useState(true);\n  return (\n    <View style={styles.container}>\n      <Modal\n        presentationStyle='overFullScreen'\n        animationType='slide'\n        transparent={true}\n        visible={modalVisible}\n      >\n        <View style={[styles.modal, { marginTop: height / 2 - 80 }]}>\n          <VSpacer height={20} />\n          <Label\n            color='#fb9'\n            fontFamily='neuroBold'\n            text={win ? 'You Won!' : 'You Lost!'}\n          />\n          <VSpacer height={10} />\n          <Label\n            color='#fb9'\n            fontFamily='neuroBold'\n            text={'Your score was: ' + scores.reverse()[0].score}\n          />\n          <Button\n            title='OK'\n            fontFamily='neuroBold'\n            onPress={() => setModalVisible(false)}\n          />\n        </View>\n      </Modal>\n      <VSpacer height={10} />\n      {scores && <LastResults results={scores.reverse()} />}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  modal: {\n    width: 300,\n    margin: 40,\n    backgroundColor: '#aaa',\n    borderRadius: 25,\n    padding: 50,\n    alignItems: 'center',\n    alignSelf: 'center',\n    alignContent: 'center',\n  },\n});\n","import { useState } from 'react';\nimport { GameScreen } from './components/screens/GameScreen';\nimport { IntroScreen } from './components/screens/IntroScreen';\nimport { ResultObj, ResultScreen } from './components/screens/ResultScreen';\n\nexport const Game = () => {\n  const [gameStarted, setGameStarted] = useState(false);\n  const [gameWon, setGameWon] = useState(null);\n  const [scores, setScores] = useState([]);\n\n  const start = () => {\n    setGameStarted(true);\n  };\n\n  const win = (score: number) => {\n    const resultObj: ResultObj = { win: true, score: score };\n    scores.push(resultObj);\n    setScores(scores);\n    setGameStarted(false);\n    setGameWon(true);\n  };\n\n  const lose = (score: number) => {\n    const resultObj: ResultObj = { win: false, score: score };\n    scores.push(resultObj);\n    setScores(scores);\n    setGameStarted(false);\n    setGameWon(false);\n  };\n\n  return (\n    <>\n      {!gameStarted ? (\n        <IntroScreen start={start} />\n      ) : (\n        <GameScreen win={win} lose={lose} />\n      )}\n      {gameWon !== null && !gameStarted && (\n        <ResultScreen\n          result={{ win: gameWon, score: scores[0].score }}\n          scores={scores as [ResultObj]}\n        />\n      )}\n    </>\n  );\n};\n","import { AppContainer } from './src/designSystem/layout/AppContainer';\nimport { Game } from './src/Game';\n\nexport default function App() {\n  return (\n    <AppContainer>\n      <Game />\n    </AppContainer>\n  );\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/expo-game/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [340], () => (__webpack_require__(6271)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["SplashScreen","AppContainer","_ref","children","_useFonts","useFonts","neuroLight","require","neuroLightItalic","neuro","neuroItalic","neuroBold","neuroBoldItalic","_useFonts2","_slicedToArray","fontsLoaded","fontError","onLayoutRootView","useCallback","_asyncToGenerator","_jsxs","SafeAreaView","onLayout","style","styles","container","_jsx","StatusBar","StyleSheet","create","flex","alignItems","justifyContent","backgroundColor","Label","text","color","size","fontFamily","Text","selectable","fontSize","Button","title","onPress","titleColor","Pressable","View","height","minWidth","borderRadius","VSpacer","parseData","image","imageData","manipulateAsync","localUri","crop","originX","frame","x","originY","y","width","w","h","base64","format","SaveFormat","PNG","_x","_x2","apply","arguments","GameLoopContext","createContext","subscribe","callback","cleanup","id","SpriteSheet","data","fps","frames","_useState","useState","_useState2","currentFrame","setCurrentFrame","_useState3","_useState4","images","setImages","dimensions","sourceSize","_useState5","_useState6","animationID","setAnimationID","gameLoop","useContext","setFrame","tick","newFrame","Number","isInteger","useEffect","spriteSheetImage","Asset","fromModule","downloadAsync","imgs","i","length","push","Image","source","GameLoopContextProvider","previousTimeTick","useRef","currentFpsTick","callbacks","update","requestAnimationFrame","now","Math","round","Date","current","req","cancelAnimationFrame","Provider","value","obj","splice","findIndex","flamesSheet","Clock","forwardRef","_props","ref","currentTime","setCurrentTime","startTime","useImperativeHandle","setTime","MAX_FPS","floor","alignSelf","Grid","gridData","map","element","position","top","left","borderColor","borderWidth","GRID_SIZE","horizontal","vertical","GameBoard","_useWindowDimensions","useWindowDimensions","yOffSet","Platform","OS","gridDimensions","elementWidth","elementHeight","grid","Array","j","toString","createGridData","GameScreen","win","lose","clock","flamesData","IntroScreen","start","_Fragment","LastResults","results","resultObj","score","random","ResultScreen","result","scores","modalVisible","setModalVisible","Modal","presentationStyle","animationType","transparent","visible","modal","marginTop","reverse","margin","padding","alignContent","Game","gameStarted","setGameStarted","gameWon","setGameWon","setScores","App","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","call","m","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","Object","keys","every","key","r","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","g","globalThis","this","Function","e","window","prop","prototype","hasOwnProperty","Symbol","toStringTag","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","forEach","bind","__webpack_exports__"],"sourceRoot":""}